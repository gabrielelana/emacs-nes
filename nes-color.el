;; -*- lexical-binding: t -*-

(eval-when-compile (require 'cl-lib))

(defconst nes/color:COLORS
  [
   (#x66 #x66 #x66)
   (#x00 #x2A #x88)
   (#x14 #x12 #xA7)
   (#x3B #x00 #xA4)
   (#x5C #x00 #x7E)
   (#x6E #x00 #x40)
   (#x6C #x06 #x00)
   (#x56 #x1D #x00)
   (#x33 #x35 #x00)
   (#x0B #x48 #x00)
   (#x00 #x52 #x00)
   (#x00 #x4F #x08)
   (#x00 #x40 #x4D)
   (#x00 #x00 #x00)
   (#x00 #x00 #x00)
   (#x00 #x00 #x00)
   (#xAD #xAD #xAD)
   (#x15 #x5F #xD9)
   (#x42 #x40 #xFF)
   (#x75 #x27 #xFE)
   (#xA0 #x1A #xCC)
   (#xB7 #x1E #x7B)
   (#xB5 #x31 #x20)
   (#x99 #x4E #x00)
   (#x6B #x6D #x00)
   (#x38 #x87 #x00)
   (#x0C #x93 #x00)
   (#x00 #x8F #x32)
   (#x00 #x7C #x8D)
   (#x00 #x00 #x00)
   (#x00 #x00 #x00)
   (#x00 #x00 #x00)
   (#xFF #xFE #xFF)
   (#x64 #xB0 #xFF)
   (#x92 #x90 #xFF)
   (#xC6 #x76 #xFF)
   (#xF3 #x6A #xFF)
   (#xFE #x6E #xCC)
   (#xFE #x81 #x70)
   (#xEA #x9E #x22)
   (#xBC #xBE #x00)
   (#x88 #xD8 #x00)
   (#x5C #xE4 #x30)
   (#x45 #xE0 #x82)
   (#x48 #xCD #xDE)
   (#x4F #x4F #x4F)
   (#x00 #x00 #x00)
   (#x00 #x00 #x00)
   (#xFF #xFE #xFF)
   (#xC0 #xDF #xFF)
   (#xD3 #xD2 #xFF)
   (#xE8 #xC8 #xFF)
   (#xFB #xC2 #xFF)
   (#xFE #xC4 #xEA)
   (#xFE #xCC #xC5)
   (#xF7 #xD8 #xA5)
   (#xE4 #xE5 #x94)
   (#xCF #xEF #x96)
   (#xBD #xF4 #xAB)
   (#xB3 #xF3 #xCC)
   (#xB5 #xEB #xF2)
   (#xB8 #xB8 #xB8)
   (#x00 #x00 #x00)
   (#x00 #x00 #x00)
   ])

(defconst nes/colors
  (cl-map 'vector
       (lambda (color)
         (let ((normalize0 (/ (nth 0 color) 255.0))
               (normalize1 (/ (nth 1 color) 255.0))
               (normalize2 (/ (nth 2 color) 255.0)))
           `(
             ((glyph colorize)
              (t ? ))

             ((color-x color-x)
              (color-tty color-tty)
              (t mono-tty))

             (((glyph color-x) [,normalize0 ,normalize1 ,normalize2])
              (color-tty ,(format "#%02X%02X%02X" (nth 0 color)
                                                  (nth 1 color)
                                                  (nth 2 color)))
              )))
         )
       nes/color:COLORS
       ))

(provide 'nes-color)
